{"version":3,"sources":["Overlay.ts","background.ts","loading.ts","content.ts","image.ts","caption.ts","tools.ts"],"names":[],"mappings":"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","file":"overlay.7b11948c.js","sourceRoot":"..","sourcesContent":["\"use strict\";\n\nimport { create as createBackground } from \"./background\";\nimport createLoading from \"./loading\";\nimport createContent from \"./content\";\nimport createImage from \"./image\";\nimport createCaption from \"./caption\";\nimport createTools from \"./tools\";\n\nclass Overlay {\n  private element: HTMLElement;\n  private captionCallback: (element: HTMLElement) => string;\n\n  constructor(element: HTMLElement, captionCallback?: (element: HTMLElement) => string) {\n    this.element = element;\n    this.captionCallback = captionCallback;\n  }\n\n  public open():void {\n    const href = this.element.getAttribute(\"href\");\n\n    document.querySelector(\"body\").style.overflow = \"hidden\";\n\n    createBackground();\n    createLoading();\n    createContent();\n\n    const image = new Image();\n    image.src = href;\n    image.onload = () => {\n      const width = image.naturalWidth;\n      const height = image.naturalHeight;\n\n      document.querySelector(\".overlay-loading\").remove();\n\n      createImage(image, width, height);\n\n      if (typeof this.captionCallback !== \"undefined\") {\n        const caption = this.captionCallback(this.element);\n\n        createCaption(caption, true);\n      }\n\n      createTools();\n    };\n  }\n}\n\nexport { Overlay as default };\n\n// See https://github.com/parcel-bundler/parcel/issues/766\nmodule.exports = Overlay;\n","\"use strict\";\n\nexport function create(): void {\n  document.body.style.overflow = \"hidden\";\n\n  const div = document.createElement(\"div\");\n\n  div.className = \"overlay\";\n\n  div.addEventListener(\"click\", () => {\n    destroy();\n\n    document.querySelector(\"body\").style.overflow = \"\";\n  });\n\n  document.body.append(div);\n}\n\nexport function destroy(): void {\n  const element = document.querySelector(\".overlay\");\n\n  if (element !== null) {\n    element.remove();\n  }\n}\n","\"use strict\";\n\nexport default function(): void {\n  const div = document.createElement(\"div\");\n\n  div.className = \"overlay-loading\";\n  div.innerText = \"Loading...\";\n\n  document.querySelector(\".overlay\").append(div);\n}\n","\"use strict\";\n\nexport default function(): void {\n  const div = document.createElement(\"div\");\n\n  div.className = \"overlay-content\";\n\n  document.querySelector(\".overlay\").append(div);\n}\n","\"use strict\";\n\nimport { destroy } from \"./background\";\n\nfunction determineImageOverlaySize(\n  width: number,\n  height: number,\n  element: HTMLElement\n): void {\n  const w = Math.max(\n    document.documentElement.clientWidth,\n    window.innerWidth || 0\n  );\n  const h = Math.max(\n    document.documentElement.clientHeight,\n    window.innerHeight || 0\n  );\n\n  if (width > w || height > h) {\n    element.style.backgroundSize = \"contain\";\n  }\n}\n\nexport default function(\n  image: HTMLImageElement,\n  width: number,\n  height: number\n): void {\n  const div = document.createElement(\"div\");\n\n  div.className = \"overlay-image\";\n  div.style.backgroundImage = `url(${image.src})`;\n\n  div.addEventListener(\"click\", () => {\n    destroy();\n\n    document.querySelector(\"body\").style.overflow = \"\";\n  });\n\n  determineImageOverlaySize(width, height, div);\n\n  document.querySelector(\".overlay-content\").append(div);\n}\n","\"use strict\";\n\nexport default function(text: string, html = false): void {\n  const div = document.createElement(\"div\");\n\n  div.className = \"overlay-caption\";\n\n  if (html === true) {\n    div.innerHTML = text;\n  } else {\n    div.innerText = text;\n  }\n\n  document.querySelector(\".overlay-content\").append(div);\n}\n","\"use strict\";\n\nlet rotate = 0;\n\nexport default function(): void {\n  const div = document.createElement(\"div\");\n\n  div.className = \"overlay-tools\";\n\n  const rotateBtn = document.createElement(\"button\");\n  rotateBtn.innerHTML = \"<i class=\\\"mi-refresh\\\">\";\n  rotateBtn.addEventListener(\"click\", (event: MouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    rotate += 90;\n    if (rotate >= 360) rotate = 0;\n\n    const image = document.querySelector(\".overlay-image\") as HTMLDivElement;\n    image.style.transform = `rotate(${rotate}deg)`;\n  });\n\n  div.append(rotateBtn);\n\n  document.querySelector(\".overlay-content\").append(div);\n}\n"]}
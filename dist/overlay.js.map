{"version":3,"sources":["background.ts","loading.ts","content.ts","image.ts","caption.ts","Overlay.ts"],"names":[],"mappings":";;;AAAA,aAEA,SAAgB,IACd,SAAS,KAAK,MAAM,SAAW,SAEzB,IAAA,EAAM,SAAS,cAAc,OAEnC,EAAI,UAAY,UAEhB,EAAI,iBAAiB,QAAS,WAC5B,IAEA,SAAS,cAAc,QAAQ,MAAM,SAAW,KAGlD,SAAS,KAAK,OAAO,GAGvB,SAAgB,IACR,IAAA,EAAU,SAAS,cAAc,YAEvB,OAAZ,GACF,EAAQ,SAJZ,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,QAAA,YAAA,EAhBA,QAAA,OAAA,EAgBA,QAAA,QAAA;;AClBA,aAEA,SAAA,IACQ,IAAA,EAAM,SAAS,cAAc,OAEnC,EAAI,UAAY,kBAChB,EAAI,UAAY,aAEhB,SAAS,cAAc,YAAY,OAAO,GAN5C,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;ACFA,aAEA,SAAA,IACQ,IAAA,EAAM,SAAS,cAAc,OAEnC,EAAI,UAAY,kBAEhB,SAAS,cAAc,YAAY,OAAO,GAL5C,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;ACFA,aAuBA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IArBA,IAAA,EAAA,QAAA,gBAEA,SAAS,EACP,EACA,EACA,GAEM,IAAA,EAAI,KAAK,IACb,SAAS,gBAAgB,YACzB,OAAO,YAAc,GAEjB,EAAI,KAAK,IACb,SAAS,gBAAgB,aACzB,OAAO,aAAe,IAGpB,EAAQ,GAAK,EAAS,KACxB,EAAQ,MAAM,eAAiB,WAInC,SAAA,EACE,EACA,EACA,GAEM,IAAA,EAAM,SAAS,cAAc,OAEnC,EAAI,UAAY,gBAChB,EAAI,MAAM,gBAAkB,OAAO,EAAM,IAAG,IAE5C,EAAI,iBAAiB,QAAS,WAC5B,EAAA,UAEA,SAAS,cAAc,QAAQ,MAAM,SAAW,KAGlD,EAA0B,EAAO,EAAQ,GAEzC,SAAS,cAAc,oBAAoB,OAAO,GAlBpD,QAAA,QAAA;;ACvBA,aAEA,SAAA,EAAwB,EAAc,QAAA,IAAA,IAAA,GAAA,GAC9B,IAAA,EAAM,SAAS,cAAc,OAEnC,EAAI,UAAY,mBAEH,IAAT,EACF,EAAI,UAAY,EAEhB,EAAI,UAAY,EAGlB,SAAS,cAAc,oBAAoB,OAAO,GAXpD,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;ACFA,aAkDA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAhDA,QAAA,wBAEA,IAAA,EAAA,QAAA,gBACA,EAAA,EAAA,QAAA,cACA,EAAA,EAAA,QAAA,cACA,EAAA,EAAA,QAAA,YACA,EAAA,EAAA,QAAA,cAEA,EAAA,WAIE,SAAA,EAAY,EAAsB,GAC3B,KAAA,QAAU,EACV,KAAA,gBAAkB,EA6B3B,OA1BS,EAAA,UAAA,KAAP,WAAA,IAAA,EAAA,KACQ,EAAO,KAAK,QAAQ,aAAa,QAEvC,SAAS,cAAc,QAAQ,MAAM,SAAW,SAEhD,EAAA,SACA,EAAA,UACA,EAAA,UAEM,IAAA,EAAQ,IAAI,MAClB,EAAM,IAAM,EACZ,EAAM,OAAS,WACP,IAAA,EAAQ,EAAM,aACd,EAAS,EAAM,cAMjB,GAJJ,SAAS,cAAc,oBAAoB,SAE3C,EAAA,QAAY,EAAO,EAAO,QAEU,IAAzB,EAAK,gBAAiC,CACzC,IAAA,EAAU,EAAK,gBAAgB,EAAK,SAE1C,EAAA,QAAc,GAAS,MAI/B,EAnCA,GAqCoB,QAAA,QAAA,EAGpB,OAAO,QAAU","file":"overlay.js","sourceRoot":"../src/javascript","sourcesContent":["\"use strict\";\n\nexport function create(): void {\n  document.body.style.overflow = \"hidden\";\n\n  const div = document.createElement(\"div\");\n\n  div.className = \"overlay\";\n\n  div.addEventListener(\"click\", () => {\n    destroy();\n\n    document.querySelector(\"body\").style.overflow = \"\";\n  });\n\n  document.body.append(div);\n}\n\nexport function destroy(): void {\n  const element = document.querySelector(\".overlay\");\n\n  if (element !== null) {\n    element.remove();\n  }\n}\n","\"use strict\";\n\nexport default function(): void {\n  const div = document.createElement(\"div\");\n\n  div.className = \"overlay-loading\";\n  div.innerText = \"Loading...\";\n\n  document.querySelector(\".overlay\").append(div);\n}\n","\"use strict\";\n\nexport default function(): void {\n  const div = document.createElement(\"div\");\n\n  div.className = \"overlay-content\";\n\n  document.querySelector(\".overlay\").append(div);\n}\n","\"use strict\";\n\nimport { destroy } from \"./background\";\n\nfunction determineImageOverlaySize(\n  width: number,\n  height: number,\n  element: HTMLElement\n): void {\n  const w = Math.max(\n    document.documentElement.clientWidth,\n    window.innerWidth || 0\n  );\n  const h = Math.max(\n    document.documentElement.clientHeight,\n    window.innerHeight || 0\n  );\n\n  if (width > w || height > h) {\n    element.style.backgroundSize = \"contain\";\n  }\n}\n\nexport default function(\n  image: HTMLImageElement,\n  width: number,\n  height: number\n): void {\n  const div = document.createElement(\"div\");\n\n  div.className = \"overlay-image\";\n  div.style.backgroundImage = `url(${image.src})`;\n\n  div.addEventListener(\"click\", () => {\n    destroy();\n\n    document.querySelector(\"body\").style.overflow = \"\";\n  });\n\n  determineImageOverlaySize(width, height, div);\n\n  document.querySelector(\".overlay-content\").append(div);\n}\n","\"use strict\";\n\nexport default function(text: string, html = false): void {\n  const div = document.createElement(\"div\");\n\n  div.className = \"overlay-caption\";\n\n  if (html === true) {\n    div.innerHTML = text;\n  } else {\n    div.innerText = text;\n  }\n\n  document.querySelector(\".overlay-content\").append(div);\n}\n","\"use strict\";\n\nimport \"../sass/overlay.scss\";\n\nimport { create as createBackground } from \"./background\";\nimport createLoading from \"./loading\";\nimport createContent from \"./content\";\nimport createImage from \"./image\";\nimport createCaption from \"./caption\";\n\nclass Overlay {\n  private element: HTMLElement;\n  private captionCallback: (element: HTMLElement) => string;\n\n  constructor(element: HTMLElement, captionCallback?: (element: HTMLElement) => string) {\n    this.element = element;\n    this.captionCallback = captionCallback;\n  }\n\n  public open():void {\n    const href = this.element.getAttribute(\"href\");\n\n    document.querySelector(\"body\").style.overflow = \"hidden\";\n\n    createBackground();\n    createLoading();\n    createContent();\n\n    const image = new Image();\n    image.src = href;\n    image.onload = () => {\n      const width = image.naturalWidth;\n      const height = image.naturalHeight;\n\n      document.querySelector(\".overlay-loading\").remove();\n\n      createImage(image, width, height);\n\n      if (typeof this.captionCallback !== \"undefined\") {\n        const caption = this.captionCallback(this.element);\n\n        createCaption(caption, true);\n      }\n    };\n  }\n}\n\nexport { Overlay as default };\n\n// See https://github.com/parcel-bundler/parcel/issues/766\nmodule.exports = Overlay;\n"]}